name: Hybrid Model Training

on:
  schedule:
    - cron: '0 0 * * *' # Every midnight UTC time zone
  workflow_dispatch: # Manual trigger
  
concurrency:
  group: train-model
  cancel-in-progress: true

jobs:
  check-and-train:
    runs-on: ubuntu-latest

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      MY_TOKEN: ${{ secrets.MY_TOKEN }}
      TRAIN_DATA_PATH: 'data/train_gen_frames'         
      VALIDATION_DATA_PATH: 'data/train_gen_frames'    

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true  # Enable Git LFS support

      - name: Install Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install git-lfs
          git lfs install

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' 

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check for New Data
        id: check_data
        run: |
          python check_new_data.py

      - name: Retrieve New Videos
        id: retrieve_data
        if: steps.check_data.outputs.DATA_PRESENT == 'true'
        run: |
          python retrieve_data.py

      - name: Convert Videos to Frames
        if: steps.retrieve_data.outputs.NEW_DATA_PROCESSED == 'true'
        run: |
          python convert_frames.py

      - name: Train the Model
        if: steps.retrieve_data.outputs.NEW_DATA_PROCESSED == 'true'
        run: |
          python train.py

      - name: No New Data Processed - Skip Training
        if: steps.retrieve_data.outputs.NEW_DATA_PROCESSED != 'true'
        run: echo "No new data processed. Skipping training."

      - name: Commit and Push .keras Files via Git LFS
        if: steps.retrieve_data.outputs.NEW_DATA_PROCESSED == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add .keras files tracked by Git LFS
          git add data/models/updated_model.keras  
          
          # Commit changes
          git commit -m "Update .keras model files via GitHub Actions" || echo "No changes to commit"
          
          # Push changes
          git push

